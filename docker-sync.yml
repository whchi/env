version: '2'
options:
  compose-file-path: 'docker-compose.yml'
  verbose: true

syncs:
  sync-folder:
    src: '~/path/to/local/mount/documentroot'
    notify_terminal: true
    sync_host_ip: 'auto'
    sync_excludes:
      [
        'Gemfile.lock',
        'Gemfile',
        'config.rb',
        '.sass-cache',
        'sass',
        'sass-cache',
        'composer.json',
        'bower.json',
        'package.json',
        'Gruntfile*',
        'bower_components',
        'node_modules',
        '.gitignore',
        '.git',
        '*.coffee',
        '*.scss',
        '*.sass',
        'storage',
        'database'
      ]
    # optional, default can be either rsync or unison See Strategies in the wiki for explanation
    sync_strategy: 'unison'

    # this does not user groupmap but rather configures the server to map
    # optional: usually if you map users you want to set the user id of your application container here
    # sync_userid: '5000'

    # optional: usually if you map groups you want to set the group id of your application container here
    # this does not user groupmap but rather configures the server to map
    # this is only available for unison/rsync, not for d4m/native (default) strategies
    # sync_groupid: '6000'

    # defines how sync-conflicts should be handled. With default it will prefer the source with --copyonconflict
    # so on conflict, pick the one from the host and copy the conflicted file for backup
    sync_prefer: 'default'

    # optional, a list of regular expressions to exclude from the fswatch - see fswatch docs for details
    # IMPORTANT: this is not supported by native_osx
    watch_excludes:
      [
        '.*/.git',
        '.*/node_modules',
        '.*/bower_components',
        '.*/sass-cache',
        '.*/.sass-cache',
        '.*/.sass-cache',
        '.coffee',
        '.scss',
        '.sass',
        '.gitignore',
      ]

    # optional: use this to switch to fswatch verbose mode
    watch_args: '-v'

    # monit can be used to monitor the health of unison in the native_osx strategy and can restart unison if it detects a problem
    # optional: use this to switch monit monitoring on
    monit_enable: false

    # optional: use this to change how many seconds between each monit check (cycle)
    monit_interval: 5

    # optional: use this to change how many consecutive times high cpu usage must be observed before unison is restarted
    monit_high_cpu_cycles: 2
